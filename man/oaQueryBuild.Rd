% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oaQueryBuild.R
\name{oaQueryBuild}
\alias{oaQueryBuild}
\title{Generate an OpenAlex query from a set of parameters
It generates a valid query, written following the OpenAlex API Language, from a set of parameters.}
\usage{
oaQueryBuild(
  identifier = NULL,
  entity = "works",
  filter = NULL,
  search = NULL,
  sort = NULL,
  endpoint = "https://api.openalex.org/"
)
}
\arguments{
\item{identifier}{is a character. It indicates an item identifier.}

\item{entity}{is a character. It indicates the scholarly entity of the search. The argument can be equal to
entity = c("works", "authors", "venues", "institutions", "concepts"). The default value is entity = works".}

\item{filter}{is a character. Filters narrow the list down to just entities that meet a particular condition--specifically, a particular value for a particular attribute.
Filters are formatted thusly: attribute:value. The complete list of filter attributes for each entity can be found
at \href{https://docs.openalex.org/api/get-lists-of-entities#filter}{https://docs.openalex.org/api/get-lists-of-entities#filter}}

\item{search}{is a character. Search is just another kind of filter, one that all five endpoints support. But unlike the other filters, search doesn't require an exact match.
To filter using search, append .search to the end of the property you're filtering for.}

\item{sort}{is character. Use the sort parameter to specify the property you want your list sorted by.
You can sort by these properties, where they exist:display_name, cited_by_count, works_count, publication_date, relevance_score.}

\item{endpoint}{is character. It indicates the url of the OpenAlex Endpoint API server. The default value is endpoint = "https://api.openalex.org/"}
}
\value{
a character containing the query in OpenAlex format.

For more extensive information about OpenAlex API, please visit: \href{https://docs.openalex.org/api}{https://docs.openalex.org/api}
}
\description{
Generate an OpenAlex query from a set of parameters
It generates a valid query, written following the OpenAlex API Language, from a set of parameters.
}
\examples{

\dontrun{
# Query to search all works citing the article:
  Aria, M., & Cuccurullo, C. (2017). bibliometrix:
  An R-tool for comprehensive science mapping analysis.
  Journal of informetrics, 11(4), 959-975.

  published in 2021.
  The paper is associated to the OpenAlex id W2755950973.

  Results have to be sorted by relevance score in a descending order.

query <- oaQueryBuild(
identifier=NULL,
entity = "works",
filter="cites:W2755950973,publication_year:2021",
search=NULL,
sort="relevance_score:desc",
endpoint = "https://api.openalex.org/")
}


}
